// <auto-generated />
using DogBreedApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace DogBreedApp.Migrations
{
    [DbContext(typeof(DogContext))]
    [Migration("20180722125702_InitialDb")]
    partial class InitialDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DogBreedApp.Data.Entities.DogBreed", b =>
                {
                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AdaptsWellToApartmentLiving");

                    b.Property<int>("AffectionateWithFamily");

                    b.Property<int>("AmountOfShedding");

                    b.Property<int>("DogFriendly");

                    b.Property<int>("DroolingPotential");

                    b.Property<int>("EasyToGroom");

                    b.Property<int>("EasyToTrain");

                    b.Property<int>("EnergyLevel");

                    b.Property<int>("ExerciseNeeds");

                    b.Property<int>("FriendlyTowardStrangers");

                    b.Property<int>("GeneralHealth");

                    b.Property<int>("GoodForNoviceOwners");

                    b.Property<int>("IncrediblyKidFriendlyDogs");

                    b.Property<int>("Intelligence");

                    b.Property<int>("Intensity");

                    b.Property<int>("PotentialForMouthiness");

                    b.Property<int>("PotentialForPlayfulness");

                    b.Property<int>("PotentialForWeightGain");

                    b.Property<int>("PreyDrive");

                    b.Property<int>("SensitivityLevel");

                    b.Property<int>("Size");

                    b.Property<int>("TendencyToBarkOrHowl");

                    b.Property<int>("ToleratesBeingAlone");

                    b.Property<int>("ToleratesColdWeather");

                    b.Property<int>("ToleratesHotWeather");

                    b.Property<int>("WanderlustPotential");

                    b.HasKey("Name");

                    b.ToTable("DogBreeds");
                });
#pragma warning restore 612, 618
        }
    }
}
